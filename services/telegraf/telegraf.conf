# Telegraf Configuration for Agent Lightning Monitoring

# Global tags can be specified here in key="value" format.
[global_tags]
  environment = "production"
  system = "agent-lightning"

# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "0s"
  hostname = "agent-lightning-telegraf"
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for sending metrics to InfluxDB 2.0
[[outputs.influxdb_v2]]
  urls = ["${INFLUX_URL}"]
  token = "${INFLUX_TOKEN}"
  organization = "${INFLUX_ORG}"
  bucket = "${INFLUX_BUCKET}"
  timeout = "5s"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
  core_tags = false

# Read metrics about disk usage by mount point
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# Read metrics about disk IO by device
[[inputs.diskio]]

# Get kernel statistics from /proc/stat
[[inputs.kernel]]

# Read metrics about memory usage
[[inputs.mem]]

# Get the number of processes and group them by status
[[inputs.processes]]

# Read metrics about swap memory usage
[[inputs.swap]]

# Read metrics about system load & uptime
[[inputs.system]]

# Read metrics about docker containers
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  source_tag = false
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = []
  docker_label_exclude = []

# Monitor network interface statistics
[[inputs.net]]
  interfaces = ["eth*"]
  ignore_protocol_stats = false

# Monitor HTTP endpoints for service health checks
[[inputs.http_response]]
  urls = [
    "http://host.docker.internal:8001/health",
    "http://host.docker.internal:8002/health",
    "http://host.docker.internal:8003/health",
    "http://host.docker.internal:8004/health",
    "http://host.docker.internal:8005/health",
    "http://host.docker.internal:8006/health",
    "http://host.docker.internal:8007/health",
    "http://host.docker.internal:8009/health"
  ]
  response_timeout = "5s"
  method = "GET"
  follow_redirects = false
  [inputs.http_response.tags]
    service_type = "agent-lightning-service"

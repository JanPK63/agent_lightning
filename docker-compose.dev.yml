include:
  - docker/networks.yml
  - docker/volumes.yml

services:
  postgres:
    build: ./docker/services/postgres
    container_name: agent-postgres-dev
    environment:
      POSTGRES_DB: agent_lightning_memory
      POSTGRES_USER: agent_user
      POSTGRES_PASSWORD: agent_pass_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - database

  redis:
    image: redis:7-alpine
    container_name: agent-redis-dev
    command: redis-server --requirepass redis_pass_2024
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  api-dev:
    build: 
      context: .
      dockerfile: ./docker/services/api/Dockerfile
    container_name: agent-api-dev
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass_2024@postgres:5432/agent_lightning_memory
      - REDIS_URL=redis://:redis_pass_2024@redis:6379/0
      - APP_ENV=development
      - APP_DEBUG=true
    ports:
      - "8001:8001"
    volumes:
      - .:/app
      - app_logs:/app/logs
    networks:
      - frontend
      - backend
      - database
    depends_on:
      - postgres
      - redis
    command: ["uvicorn", "enhanced_production_api:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

  dashboard-dev:
    build:
      context: .
      dockerfile: ./docker/services/dashboard/Dockerfile
    container_name: agent-dashboard-dev
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass_2024@postgres:5432/agent_lightning_memory
      - REDIS_URL=redis://:redis_pass_2024@redis:6379/0
    ports:
      - "8051:8051"
    volumes:
      - .:/app
      - app_logs:/app/logs
    networks:
      - frontend
      - backend
      - database
    depends_on:
      - postgres
      - redis
    command: ["streamlit", "run", "monitoring_dashboard_integrated.py", "--server.port=8051", "--server.address=0.0.0.0", "--server.runOnSave=true"]
networks:
  agent-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  grafana_data:
  prometheus_data:
  agent_logs:
  rl_checkpoints:

services:
  # Frontend Services
  agent-dashboard:
    build: ./docker/services/agent-dashboard
    ports:
      - "8051:8051"
    networks:
      - agent-network
    environment:
      - API_BASE_URL=http://production-api:8001
    depends_on:
      - production-api

  visual-builder:
    build: ./docker/services/visual-builder
    ports:
      - "8052:8052"
    networks:
      - agent-network
    depends_on:
      - production-api

  monitoring-dashboard:
    build: ./docker/services/monitoring-dashboard
    ports:
      - "8053:8053"
    networks:
      - agent-network
    depends_on:
      - prometheus
      - influxdb

  # Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/configs/ssl:/etc/nginx/ssl:ro
    networks:
      - agent-network
    depends_on:
      - agent-dashboard
      - production-api

  # API Services
  production-api:
    build: ./docker/services/production-api
    ports:
      - "8001:8001"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis

  agent-api:
    build: ./docker/services/agent-api
    ports:
      - "8002:8002"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
      - agent-coordinator

  rl-api:
    build: ./docker/services/rl-api
    ports:
      - "8003:8003"
    networks:
      - agent-network
    depends_on:
      - rl-training-server

  workflow-api:
    build: ./docker/services/workflow-api
    ports:
      - "8004:8004"
    networks:
      - agent-network
    depends_on:
      - workflow-engine

  # Core Services
  rl-training-server:
    build: ./docker/services/rl-training
    ports:
      - "8010:8010"
    networks:
      - agent-network
    volumes:
      - rl_checkpoints:/app/checkpoints
    environment:
      - CUDA_VISIBLE_DEVICES=0

  agent-coordinator:
    build: ./docker/services/agent-coordinator
    ports:
      - "8011:8011"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
      - memory-manager

  memory-manager:
    build: ./docker/services/memory-manager
    ports:
      - "8012:8012"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis

  workflow-engine:
    build: ./docker/services/workflow-engine
    ports:
      - "8013:8013"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
    depends_on:
      - postgres

  knowledge-manager:
    build: ./docker/services/knowledge-manager
    ports:
      - "8014:8014"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
    depends_on:
      - postgres

  mcp-server:
    build: ./docker/services/mcp-server
    ports:
      - "8015:8015"
    networks:
      - agent-network
    depends_on:
      - memory-manager
      - knowledge-manager

  # Data Layer
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: agent_lightning
      POSTGRES_USER: agent_user
      POSTGRES_PASSWORD: agent_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - agent-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redis_pass --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agent-network

  influxdb:
    image: influxdb:2.7-alpine
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: admin_pass
      DOCKER_INFLUXDB_INIT_ORG: agent-lightning
      DOCKER_INFLUXDB_INIT_BUCKET: metrics
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - agent-network

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - "9090:9090"
    volumes:
      - ./docker/configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - agent-network

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/configs/grafana:/etc/grafana/provisioning:ro
    networks:
      - agent-network
    depends_on:
      - prometheus
      - influxdb

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./docker/configs/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    networks:
      - agent-network
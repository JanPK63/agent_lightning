version: '3.8'

networks:
  agent-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:

services:
  # Agent Dashboard - Main UI
  agent-dashboard:
    build:
      context: .
      dockerfile: docker/services/agent-dashboard/Dockerfile
    ports:
      - "8051:8051"
    networks:
      - agent-network
    environment:
      - API_BASE_URL=http://production-api:8001
    depends_on:
      - production-api

  # Production API
  production-api:
    build:
      context: .
      dockerfile: docker/services/production-api/Dockerfile
    ports:
      - "8001:8001"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis

  # Enterprise Services
  knowledge-manager:
    build:
      context: .
      dockerfile: docker/services/knowledge-manager/Dockerfile
    ports:
      - "8014:8014"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
    depends_on:
      - postgres

  memory-manager:
    build:
      context: .
      dockerfile: docker/services/memory-manager/Dockerfile
    ports:
      - "8012:8012"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis

  agent-coordinator:
    build:
      context: .
      dockerfile: docker/services/agent-coordinator/Dockerfile
    ports:
      - "8011:8011"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis

  rl-training:
    build:
      context: .
      dockerfile: docker/services/rl-training/Dockerfile
    ports:
      - "8010:8010"
    networks:
      - agent-network
    volumes:
      - ./checkpoints:/app/checkpoints

  workflow-engine:
    build:
      context: .
      dockerfile: docker/services/workflow-engine/Dockerfile
    ports:
      - "8013:8013"
    networks:
      - agent-network
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_lightning
    depends_on:
      - postgres

  # Data Layer
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: agent_lightning
      POSTGRES_USER: agent_user
      POSTGRES_PASSWORD: agent_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agent-network

  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks:
      - agent-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - agent-network

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - agent-network
    depends_on:
      - prometheus

  # Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/configs/nginx-simple.conf:/etc/nginx/nginx.conf:ro
    networks:
      - agent-network
    depends_on:
      - agent-dashboard
      - production-api